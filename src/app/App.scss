@use '../shared.scss' as *;

.main {
  @extend %theme-transition;
  width: 100%;
  height: 100vh;
  overflow: hidden;
  padding: 0 rem(10);
}

.container {
  max-width: rem(1116px + 10px);
  padding: 0 rem(5px);
  margin: 0 auto;
}

.window {
  @extend %theme-transition;
  margin-top: rem(165px);
  overflow: hidden;
  border-radius: rem(7px);

  .dark-theme & {
    border: rem(1px) solid color(outer-border);
  }

  .light-theme & {
    border: rem(1px) solid color(light-outer-border);
  }
}

.header {
  @extend %theme-transition;
  display: flex;
  justify-content: space-between;
  height: rem(39px);
  padding: rem(7px) rem(15px);

  .dark-theme & {
    background-color: color(element-background);
  }

  .light-theme & {
    background-color: color(light-element-background);
  }

  &__user-actions {
    display: flex;
    gap: 0 rem(24px);
  }

  &__share-actions {
    display: flex;
    gap: 0 rem(15px);
  }
}

.footer {
  @extend .font-sans-serif;
  display: flex;
  padding: 0 rem(30);
  gap: 0 rem(30);
  align-items: center;
  justify-content: start;
  height: rem(39px);

  .dark-theme & {
    background-color: color(element-background);
  }

  .light-theme & {
    background-color: color(light-element-background);
  }
}

.usage-btn {
  color: #fff;

  &__text {
    font-size: rem(14);
  }
}

.author {
  color: #fff;
  font-size: rem(12);
  opacity: 50%;
  display: block;

  &__link {
    color: #fff;
    text-decoration: underline;
  }
}

.action-button {
  @extend %theme-transition;
  display: flex;
  justify-content: center;
  align-items: center;
  width: rem(26px);
  height: rem(26px);
  border-radius: rem(13px);

  .dark-theme & {
    background-color: color(icons-background);
  }

  .light-theme & {
    background-color: color(light-icons-background);
  }
}

.github-icon {
  width: rem(26.6px);
  height: rem(26.6px);
}

.download-icon {
  width: rem(14px);
  height: rem(13px);
}

.copy-icon {
  width: rem(12px);
  height: rem(12px);
}

.share-icon {
  width: rem(13px);
  height: rem(11px);
}

.settings-icon {
  width: rem(16px);
  height: rem(16px);
}

.window-body {
  position: relative;
  height: rem(554px);
  display: flex;

  // The gap between two windows reveals the window-body background,
  // which acts as the inner border.
  gap: 0 rem(1px);

  .dark-theme & {
    background-color: color(inner-border);
  }

  .light-theme & {
    background-color: color(light-inner-border);
  }
}

.code-input {
  @extend %theme-transition;
  flex-basis: 50%;
  overflow: auto;
  padding: rem(6) rem(20);

  .dark-theme & {
    background-color: color(background);
  }

  .light-theme & {
    background-color: color(light-background);
  }
}

.code-editor {
  $textarea-vertical-padding: rem(10);
  $textarea-horizontal-padding: rem(10);
  $textarea-bottom-padding: rem(16);
  height: 100%;
  @extend .font-mono;
  font-size: rem(13);
  overflow: visible !important;

  %textarea-paddings {
    padding: rem(10) rem(10) rem(16) rem(10) !important;
  }

  & textarea {
    @extend %textarea-paddings;
    outline: none;
  }

  & pre {
    @extend %textarea-paddings;
  }

  .dark-theme & {
    color: color(text)
  }

  .light-theme & {
    color: color(light-text)
  }

  & span {
    position: relative;

    &::after {
      position: absolute;
      content: "";
      right: rem(-1);
      top: 0;
      width: rem(2);
      height: 100%;

      .dark-theme & {
        background-color: color(indents);
      }

      .light-theme & {
        background-color: color(light-indents);
      }
    }
  }
}

.output-window {
  @extend %theme-transition;
  flex-basis: 50%;
  overflow: auto;
  height: 100%;

  &__text {
    @extend .font-mono;
    white-space: pre-wrap;
    width: max-content;
    padding: rem(16) rem(30);
    font-size: rem(13);

    .dark-theme & {
      color: color(text);
    }

    .light-theme & {
      color: color(light-text);
    }
  }

  &__error {
    @extend .font-mono;
    white-space: pre-wrap;
    width: max-content;
    padding: rem(16) rem(30);
    font-size: rem(13);
    color: red;
  }

  .dark-theme & {
    background-color: color(output-background);
  }

  .light-theme & {
    background-color: color(light-output-background);
  }
}

