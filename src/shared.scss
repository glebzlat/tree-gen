@use 'sass:math';
@import url('https://fonts.googleapis.com/css2?family=Roboto+Condensed&family=Roboto:ital,wght@0,400;1,100&family=Source+Code+Pro&display=swap');

$ease-out-expo: cubic-bezier(0.16, 1, 0.3, 1);

$colors: (
  "main-background": #303C40,
  "background": #262F32,
  "output-background": #303C40,
  "settings-background": #303C40,
  "about-background": #303C40,
  "header-background": #303C40,
  "element-background": #414F53,
  "outer-border": #6C6C6C,
  "inner-border": #6C6C6C,
  "icons": #E2E2E2,
  "icons-background": #20282B,
  "notification-background": #20282B,
  "text": #FFFFFF,
  "icon-text": #E2E2E2,
  "theme-switch-background": #20282B,
  "theme-switch-foreground": #303C40,
  "theme-switch-text": #E2E2E2,
  "notification-text": #E2E2E2,
  "indents": #3A464A,

  "light-main-background": #EEF9FD,
  "light-background": #D7E8EE,
  "light-output-background": #FCFEFF,
  "light-settings-background": #FCFEFF,
  "light-about-background": #FCFEFF,
  "light-header-background": #FCFEFF,
  "light-element-background": #596B70,
  "light-outer-border": #596B70,
  "light-inner-border": #D1D1D1,
  "light-icons": #E2E2E2,
  "light-icons-background": #39474A,
  "light-notification-background": #39474A,
  "light-text": #262F32,
  "light-icon-text": #141414,
  "light-theme-switch-background": #D1E0E4,
  "light-theme-switch-foreground": #ECF9FE,
  "light-theme-switch-text": #141414,
  "light-notification-text": #E2E2E2,
  "light-indents": #BECED4,

  "code-background": #303C40,
  "light-code-background": #EEF9FD,
  "code-border": #D1D1D1,
  "summary-background": #20282B,
  "light-summary-background": #445357,
  "summary-text": #E2E2E2,
  "light-summary-text": #E2E2E2,

  "switch-active": #33AED7,
  "light-switch-active": #3DC9FF
);

@function color($name) {
  @return map-get($colors, $name);
}

@function strip-unit($number) {
  @if type-of($number) == "number" and not unitless($number) {
    @return math.div($number, ($number * 0 + 1));
  }

  @return $number;
}

@function rem($pixels) {
  @if math.unit($pixels) == "px" or math.is-unitless($pixels) {
    @return strip-unit(math.div($pixels, 16)) * 1rem;
  }
  @error "Value must be unitless or in pixels: #{$pixels}"
}


%theme-transition {
  transition: background-color $ease-out-expo .5s, border $ease-out-expo .5s;
}

.font-mono {
  font-family: "Source Code Pro", monospace;
  font-optical-sizing: auto;
  font-weight: 400;
  font-style: normal;
  line-height: 1.253;
}

.font-sans-serif {
  font-family: "Roboto Condensed", sans-serif;
  font-optical-sizing: auto;
  font-weight: 400;
  font-style: normal;
}

.font-sans-serif-regular {
  font-family: "Roboto", sans-serif;
  font-weight: 400;
  font-style: normal;
}

.dark-theme {
  background-color: color(main-background);
}

.light-theme {
  background-color: color(light-main-background);
}
